#!/bin/sh
##############################
# astar - A P.O.C. for creating an Allstar connectivity graph
#
# HISTORICAL INFORMATION -
#
# 2018-12-11  msipin  Created.
# 2018-12-12  msipin  Tried using nodes{1,2,3,4}.allstarlink.org/cgi-bin/nodes.pl
#                     to get nodes' IP address:port information. Allowed multiple
#                     node numbers on command line. Added default timeouts on
#                     "wget" requests. Allowed switching between dig/DNS and
#                     HTTP GET technique to develop node/IP:port list (requires change
#                     to this code to switch). Added ability to show connectedness (as a
#                     prelude to using graphviz to draw a bubble graph!) by specifying
#                     a "-b" command-line argument.
##############################

SEED_NODE_NUMBER=""

# Set to "1" to draw connectivity graphs, set to "0" to skip this
DRAW_CONNECTIVITY=0
BUBBLES_ARG="-b"

# Max timeouts for wget commands (in seconds)
WGET_TIMEOUT=20			# Looking up one node
WGET_FULL_LIST_TIMEOUT=60	# Grabbing entire "node list"

# Check for "draw bubbles" first!
if [ $# -ge 1 -a ""$1"" = ""$BUBBLES_ARG"" ]
then
	# User wants bubbles!
	DRAW_CONNECTIVITY=1
	shift 1
fi


# Starting NODE number (usually is *YOUR* node number!) - unless you
# override it on the command line!
if [ $# -lt 1 ]
then
	SEED_NODE_NUMBER=`echo $NODE1`
fi

while [ $# -ge 1 ]
do
    SEED_NODE_NUMBER=`echo $SEED_NODE_NUMBER $1`
    shift 1
done

##echo "DEBUG: DRAW_CONNECTIVITY: $DRAW_CONNECTIVITY"
##echo "DEBUG: SEED_NODE_NUMBER: [${SEED_NODE_NUMBER}]"
##exit 2

master_list=""
done_list=""
added=0

# Add SEED node to master list
master_list=`echo ${master_list} $SEED_NODE_NUMBER`

##echo "DEBUG: Master list: $master_list"
##echo "DEBUG: DONE list:   $done_list"
##exit 2

added=1
while [ $added = 1 ]
do
  added=0
  add_list=""
  for try_node in $master_list
  do
    rslt=`echo $done_list | grep -c $try_node`
    if [ $rslt = 0 ]
    then
    	#echo "DEBUG: Doing: ${try_node}..."
	# try_node is *NOT* in "done list"

	# Add try_node to "done" list
	done_list=`echo ${done_list} $try_node`

	# Check the connectedness of try_node...
  	newest=`wget --timeout=${WGET_TIMEOUT} -q -O- http://stats.allstarlink.org/maps/nodeList.php?node=${try_node} | awk -F"?node=" '{
for (i=1;i<=NF;i++) {
    printf "%s\n\n",$i;
};
}' | grep callsign | sed "s/<\/a>/ /g" | awk '{ print $2 }' | sed "s/C//g"`

	#echo "DEBUG NEWEST: $newest"
	for check in $newest
	do
		rslt=`echo $master_list | grep -c $check`
		if [ $rslt = 0 ]
		then
			#echo "DEBUG: ${check} is not in master list!"
			# check is NOT in master list
			added=1
			# Add node to to-be-added list
			add_list=`echo ${add_list} $check`


			if [ ""$DRAW_CONNECTIVITY"" -eq 1 ]
			then
				# Draw connectivity between these nodes
				echo "\"${try_node}\" -- \"${check}\";"
			fi
		#else
			#echo "DEBUG: ${check} is already in master list"
		fi
	done

    #else
    	#echo "DEBUG: ${try_node} is *ALREADY* in done list"
    fi
  done

  # Add add_list to master_list
  master_list=`echo ${master_list} ${add_list}`

  #echo
  #echo "DEBUG: Latest master_list: ${master_list}"
done

##echo
##echo
#echo "DEBUG: *FINAL* master_list: ${master_list}"
##echo

if [ ""$DRAW_CONNECTIVITY"" -eq 0 ]
then
  # Set to "1" to use DNS/dig technique
  # Set to "0" to use HTTP GET technique
  if [ 1 ]
  then

	# Display total list of interconnected nodes using dig results -
	for NODE in ${master_list}
	do
		dig ${NODE}.nodes.hamvoip.org txt | egrep -v "^;|^\." |grep TXT | awk -F"@" '{ print $2 }' | sed "s/\// /g" | sed "s/,/ /g" | awk '{ print $2,$1 }'
	done | sort -n
  else
	# Display total list of interconnected nodes using wget from nodes.pl URL -
	# NOTE: You can also get this info from http://nodes(x).allstarlink.org/cgi-bin/nodes.pl
	#       (nodes1, nodes2, nodes3, nodes4) - it comes down as a text page in
	#       much the same format as the TXT records retrieved from dns/dig.

	# First, turn list of nodes into "egrep" pattern search
	egrep_str=`echo $master_list | awk '{ for (i=1;i<=NF;i++) {
	if ($i != "NO-ID") {
		if (i > 1) printf "|";
		printf "^%s=",$i;
	}
};
	printf "\n";
}'`

	##echo "DEBUG: egrep_str - $egrep_str"

	# Use egrep pattern against wget results from nodes(x).....nodes.pl -
	wget --timeout=${WGET_FULL_LIST_TIMEOUT} -q -O- http://nodes1.allstarlink.org/cgi-bin/nodes.pl | egrep "${egrep_str}" | sed "s/=radio@/ /g" | awk -F"/" '{ print $1 }' | sort -n
  fi
fi


exit 0

# Output of nodes1.allstarlink.org/cgi-bin/nodes.pl -
48370=radio@24.217.244.23:4569/48370,24.217.244.23
49125=radio@47.146.135.207:4569/49125,47.146.135.207

